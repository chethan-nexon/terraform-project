pipeline {
    parameters {
        choice(name: 'terraformAction', choices: ['apply', 'destroy'], description: 'Choose the Terraform action to perform')
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any

    stages {

        stage('Checkout') {
            steps {
                dir("terraform-project") {
                    git branch: 'master', url: 'https://github.com/chethan-nexon/terraform-project.git'
                }
            }
        }

        stage('Plan') {
            steps {
                dir('terraform-project') {
                    sh 'terraform init'
                    sh """
                        terraform plan -out=tfplan \
                          -var="aws_access_key=${AWS_ACCESS_KEY_ID}" \
                          -var="aws_secret_key=${AWS_SECRET_ACCESS_KEY}" \
                          -var="region=ap-south-1"
                    """
                    sh 'terraform show -no-color tfplan > tfplan.txt'
                }
            }
        }

        stage('Approval') {
            steps {
                script {
                    def plan = readFile 'terraform-project/tfplan.txt'
                    input message: "Do you want to proceed with the Terraform action?",
                          parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }

        stage('Apply or Destroy') {
            when {
                expression {
                    return params.terraformAction == 'apply' || params.terraformAction == 'destroy'
                }
            }
            steps {
                dir('terraform-project') {
                    script {
                        if (params.terraformAction == 'apply') {
                            sh 'terraform apply -input=false tfplan'
                        } else if (params.terraformAction == 'destroy') {
                            sh """
                                terraform destroy -auto-approve \
                                  -var="aws_access_key=${AWS_ACCESS_KEY_ID}" \
                                  -var="aws_secret_key=${AWS_SECRET_ACCESS_KEY}" \
                                  -var="region=ap-south-1"
                            """
                        }
                    }
                }
            }
        }
    }
}
